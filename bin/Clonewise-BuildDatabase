#!/bin/bash

if [ "$(id -u)" != 0 ]; then
	echo "Error. Must be superuser to build database."
	exit 1
fi

if [ $# -ne 1 ]; then
	echo Usage: $0 distro > /dev/stderr
	exit 1
fi

DISTRO=$1
DISTRO_PREFIX=/var/lib/Clonewise/clones/distros/$DISTRO
FIFO_TODO=$DISTRO_PREFIX/downloads/fifo-todo
NUMTASKS=5

mkdir $DISTRO_PREFIX 2> /dev/null
rm -f $FIFO_TODO
mkfifo $FIFO_TODO

function DoWork()
{
	srcname=$1
	i=$2
	apt-get source $i > $DISTRO_PREFIX/.apt-source.$srcname.$i 2> /dev/null
	out="$(grep 'dpkg-source: info: extracting' $DISTRO_PREFIX/.apt-source.$srcname.$i|awk '{print $6}')"
	if [ "$out" != "" ]; then
		cd $out
		find . -type f -name '*.dsc' -exec dpkg-source -x {} \;
		find . -type f -name '*.zip' -exec unzip {} \;
		find . -type f -name '*.gz' -exec gunzip {} \;
		find . -type f -name '*.lzma' -exec unzlma {} \;
		find . -type f -name '*.rar' -exec unrar {} \;
		find . -type f -name '*.bz2' -exec bunzip2 {} \;
		find . -type f -name '*.bz' -exec bunzip {} \;
		find . -type f -name '*.xz' -exec unxz {} \;
		find . -type f -name '*.tar'|grep -v "\.orig\.tar$"|xargs -n 1 -r tar xf
		cd ..
		find $out -type f |while read f; do ssdeep $f 2> /dev/null|tail -n1 >> $DISTRO_PREFIX/signatures/$srcname; done
		rm -rf $out
	fi
	rm -f $DISTRO_PREFIX/.apt-source.$srcname.$i
}

function Consumer()
{
	while true; do
		read line < $FIFO_TODO
		if [ "$line" = "" ]; then
			continue
		fi
		if [ "$line" = "/" ]; then
			exit 1
		fi
		srcname=$(echo $line|cut -d/ -f1)
		i=$(echo $line|cut -d/ -f2)
		DoWork $srcname $i
	done
}

mkdir $DISTRO_PREFIX/depends 2> /dev/null
mkdir $DISTRO_PREFIX/downloads 2> /dev/null
mkdir $DISTRO_PREFIX/features 2> /dev/null
mkdir $DISTRO_PREFIX/signatures 2> /dev/null
mkdir $DISTRO_PREFIX/cache 2> /dev/null

cd $DISTRO_PREFIX/downloads

rm -f $DISTRO_PREFIX/.done
rm -f $DISTRO_PREFIX/packages
rm -f $DISTRO_PREFIX/sources
rm -f $DISTRO_PREFIX/.apt-source.*

for j in $(seq 1 $NUMTASKS); do
	Consumer &
done

list=$(apt-cache pkgnames)
count=0
totlist=$(echo $list|wc -w)
for i in $list; do
	echo "#$i ($count/$totlist)"
	srcname=$(apt-cache showsrc $i|grep ^Package:|head -n1|cut -d\  -f2)
	if [ "$srcname" != "" ]; then
		grep "^$srcname$" $DISTRO_PREFIX/sources > /dev/null 2> /dev/null
		if [ $? -ne 0 ]; then
			echo "$srcname" >> $DISTRO_PREFIX/sources
			echo "$srcname/$i" >> $FIFO_TODO
		fi
	fi
	echo $i/$srcname >> $DISTRO_PREFIX/packages
	((count=count+1))
done
echo "/" >> $FIFO_TODO
rm $DISTRO_PREFIX/.apt-source.*

cat $DISTRO_PREFIX/packages |cut -d/ -f1|while read package; do
        apt-cache depends $package |grep "^  Depends:"|awk '{print $2}'> $DISTRO_PREFIX/depends/$package
done

touch $DISTRO_PREFIX/.done
