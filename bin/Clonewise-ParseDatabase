#!/usr/bin/python

import sys
import os
import getopt

onlyFixed = False
onlyUnfixed = False

def usage():
	print 'Usage: ./program [-fu] embedded-code-copies'
	sys.exit(1)

try:
	opts, args = getopt.getopt(sys.argv[1:], "fu", ["fixed", "unfixed"])
except getopt.GetoptError, err:
	print str(err)
	usage()
for o, a in opts:
	if o in ["-f", "--fixed"]:
		onlyFixed = True;
	elif o in ["-u", "--unfixed"]:
		onlyUnfixed = True;
	else:
		usage()

if len(args) != 1:
	usage()

f = open(args[0], "r")
start = False
running = False
package = ''
for line in f:
	line = line.rstrip()
	if start:
		if len(line) != 0:
			if line[0] != '\t' and line[0] != ' ':
				running = True
				embeddedPackage = line.split()[0]
			else:
				if line.find('NOTE:', 0) != -1:
					pass
				elif line.find('TODO:', 0) != -1:
					pass
				else:
					eLine = line.split('-', 1)
					s = eLine[1].strip().split(' ', 2)
					package = s[0]
					if len(s) == 1:
						sort = 'unknown_sort'
						status = 'embed'
					else:
						status = s[1].strip('<>')
						if len(s) > 2:
							sort = s[2]
						else:
							sort = 'unknown_sort'
					if onlyFixed:
						if not status in [ "unfixed", "unfixable", "removed", "itp", "unknown", "not-affected" ]:
							print '%s/%s' % (embeddedPackage, package)
					elif onlyUnfixed:
						if status in [ "unfixed", "unfixable" ]:
							print '%s/%s' % (embeddedPackage, package)
						
					else:
						print '%s/%s' % (embeddedPackage, package)
		
	elif line == '---BEGIN':
		start = True
f.close()
